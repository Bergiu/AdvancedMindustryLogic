import ../../../../../stdlib/display/font/font_small_minified_14_segment.amnd
import ./color4d.amnd
import ./toolbar_struct.amnd

struct ColorbarConfig(mem, x_start, x_end, tools_width, char_number)


# Functions:
# draw_color_toolbar:
#   draws the color toolbar
# select_color:
#   saves the selected color into the memory

function update_selected_color(ColorbarConfig update_selected_color::config, Color4D update_selected_color::mem_pos_color) {
    # selected color
    read update_selected_color::color.r update_selected_color::config.mem update_selected_color::mem_pos_color.r
    read update_selected_color::color.g update_selected_color::config.mem update_selected_color::mem_pos_color.g
    read update_selected_color::color.b update_selected_color::config.mem update_selected_color::mem_pos_color.b
    read update_selected_color::color.t update_selected_color::config.mem update_selected_color::mem_pos_color.t
    draw color update_selected_color::color.r update_selected_color::color.g update_selected_color::color.b update_selected_color::color.t 0 0
    draw rect update_selected_color::config.x_start 0 update_selected_color::config.tools_width update_selected_color::config.tools_width 0 0
    # TEXT
    update_selected_color::x_two_letter1 = update_selected_color::config.x_start + 9
    update_selected_color::x_two_letter2 = update_selected_color::config.x_start + 2
    update_selected_color::y_letter = 3

    update_selected_color::sum = update_selected_color::color.r + update_selected_color::color.g + update_selected_color::color.b
    if update_selected_color::sum > 500 or update_selected_color::color.g > 100 {
        # black
        draw color 0 0 0 255 0 0
    } else {
        # white
        draw color 255 255 255 255 0 0
    }
    exec write_letter(update_selected_color::config.char_number, 0.5, update_selected_color::x_two_letter2, update_selected_color::y_letter)
    exec write_letter(16, 0.5, update_selected_color::x_two_letter1, update_selected_color::y_letter)
}

function draw_color_toolbar(ColorbarConfig draw_color_toolbar::config, Color4D draw_color_toolbar::mem_pos_color) {
    # border
    draw color 128 128 128 255 0 0
    draw_color_toolbar::border_x = draw_color_toolbar::config.x_end + 1
    draw line draw_color_toolbar::border_x 0 draw_color_toolbar::border_x 176 0 0
    # black
    draw color 0 0 0 255 0 0
    draw_color_toolbar::y = 176 - draw_color_toolbar::config.tools_width
    g::color_toolbar::black_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # gray
    draw color 128 128 128 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::gray_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # white
    draw color 255 255 255 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::white_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # red
    draw color 255 0 0 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::red_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # green
    draw color 0 255 0 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::green_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # blue
    draw color 0 0 255 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::blue_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # yellow
    draw color 255 255 0 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::yellow_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # pink
    draw color 255 0 255 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::pink_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # cyan
    draw color 0 255 255 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::cyan_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    # brown
    draw color 155 103 60 255 0 0
    draw_color_toolbar::y -= draw_color_toolbar::config.tools_width
    g::color_toolbar::brown_pos = draw_color_toolbar::y
    draw rect draw_color_toolbar::config.x_start draw_color_toolbar::y draw_color_toolbar::config.tools_width draw_color_toolbar::config.tools_width 0 0
    exec update_selected_color(draw_color_toolbar::config, draw_color_toolbar::mem_pos_color)
}


function select_color(select_color::posy, select_color::mem, Color4D select_color::mem_pos) {
    # XXX: This can be optimized with direct counter jumps
    if select_color::posy > g::color_toolbar::black_pos {
        # black
        write 0 select_color::mem select_color::mem_pos.r
        write 0 select_color::mem select_color::mem_pos.g
        write 0 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::gray_pos {
        # gray
        write 128 select_color::mem select_color::mem_pos.r
        write 128 select_color::mem select_color::mem_pos.g
        write 128 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::white_pos {
        # white
        write 255 select_color::mem select_color::mem_pos.r
        write 255 select_color::mem select_color::mem_pos.g
        write 255 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::red_pos {
        # red
        write 255 select_color::mem select_color::mem_pos.r
        write 0 select_color::mem select_color::mem_pos.g
        write 0 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::green_pos {
        # green
        write 0 select_color::mem select_color::mem_pos.r
        write 255 select_color::mem select_color::mem_pos.g
        write 0 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::blue_pos {
        # blue
        write 0 select_color::mem select_color::mem_pos.r
        write 0 select_color::mem select_color::mem_pos.g
        write 255 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::yellow_pos {
        # yellow
        write 255 select_color::mem select_color::mem_pos.r
        write 255 select_color::mem select_color::mem_pos.g
        write 0 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::pink_pos {
        # pink
        write 255 select_color::mem select_color::mem_pos.r
        write 0 select_color::mem select_color::mem_pos.g
        write 255 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::cyan_pos {
        # cyan
        write 0 select_color::mem select_color::mem_pos.r
        write 255 select_color::mem select_color::mem_pos.g
        write 255 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    if select_color::posy > g::color_toolbar::brown_pos {
        # brown
        write 155 select_color::mem select_color::mem_pos.r
        write 103 select_color::mem select_color::mem_pos.g
        write 60 select_color::mem select_color::mem_pos.b
        write 255 select_color::mem select_color::mem_pos.t
        jump select_color::select_color_theend always 0 0
    }
    select_color::select_color_theend:
    noop
}
