function get_items_from_core(container, item_type_sensor, unittype, amount_items_to_take, stdout, stderr, stddbg) {

    # load container coordinates
    sensor get_items_from_core::__container_x container @x
    sensor get_items_from_core::__container_y container @y

    # load item type
    sensor get_items_from_core::__itemtype item_type_sensor @config
    if get_items_from_core::__itemtype == null {
        while get_items_from_core::__itemtype == null {
            print "Please select an item type."
            sensor get_items_from_core::__itemtype item_type_sensor @config
            printflush stderr
        }
    } else {
        print "Selected "
        print get_items_from_core::__itemtype
        print "\n"
    }

    # bind unit
    exec bind_unit(unittype)
    print "\n"

    # transport items
    sensor get_items_from_core::__amount_needed_items @unit get_items_from_core::__itemtype
    if get_items_from_core::__amount_needed_items > 0 {
        # move to storage
        print "Moving to storage"
        printflush stdout
        exec move_until(get_items_from_core::__container_x, get_items_from_core::__container_y, 5)
        exec drop_items(container, get_items_from_core::__amount_needed_items)
    } else {
        # move to core
        print "Moving to core"
        printflush stdout
        exec move_to_core_until(false, 5)
        sensor get_items_from_core::__total_amount @unit @totalItems
        # make empty if unit contains items
        if get_items_from_core::__total_amount > 0 {
            exec drop_items(locate_core::building, get_items_from_core::__total_amount)
        }
        exec take_items(locate_core::building, get_items_from_core::__itemtype, amount_items_to_take)
    }
}