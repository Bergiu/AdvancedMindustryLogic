# Output:
#   @unit: The bound unit
#   bind_unit::myflag: The flag of the unit
function bind_unit(bind_unit::__unittype, bind_unit::__stdout) {
    printflush bind_unit::__stdout
    print "Try to bind to unit"
    op rand bind_unit::myflag 1234567890 b
    op floor bind_unit::myflag bind_unit::myflag b
    bind_unit::__looper = 0
    bind_unit::__again = true
    while bind_unit::__again {
        ubind bind_unit::__unittype
        if @unit == null {
            printflush bind_unit::__stdout
            print "No units, aborting."
            end
        }
        sensor bind_unit::__hisflag @unit @flag
        printflush bind_unit::__stdout
        print "candidate unit has flag: "
        print bind_unit::__hisflag
        print ","
        print bind_unit::__looper
        bind_unit::__looper += 1
        if bind_unit::__looper >= 50 {
            end
        }
        bind_unit::__again = bind_unit::__hisflag != 0
    }
    sensor bind_unit::__hisflag @unit @flag
    if bind_unit::__hisflag != 0 {
        end
    }
    ucontrol flag bind_unit::myflag 0 0 0 0
}

